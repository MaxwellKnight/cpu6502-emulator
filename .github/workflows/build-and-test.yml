name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: ${{ matrix.os }} - Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]

    steps:
    - uses: actions/checkout@v3

    - name: Install GTest on Ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtest-dev cmake
        cd /usr/src/gtest
        sudo cmake CMakeLists.txt
        sudo make
        sudo cp lib/*.a /usr/lib

    - name: Install GTest on Windows
      if: runner.os == 'Windows'
      run: |
        git clone https://github.com/google/googletest.git
        cd googletest
        cmake -B build -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/gtest_install
        cmake --build build --config ${{ matrix.build_type }} --target install

    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      run: |
        cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DGTEST_ROOT=${{ github.workspace }}/gtest_install

    - name: Configure CMake (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      run: |
        cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: |
        ctest -C ${{ matrix.build_type }} --output-on-failure
