services:
  build:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    command: build_all.sh

  wasm:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    command: build_wasm.sh

  test:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    command: build_and_test.sh

  shell:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    command: /bin/bash
    tty: true
    stdin_open: true

  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=max@codeknight.dev"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
  
  web:
    image: python:3-alpine
    volumes:
      - ./web:/app/web
    working_dir: /app
    command: python -m http.server 8080 --directory /app/web
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`129.159.132.164`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
      - "traefik.http.services.web.loadbalancer.server.port=8080"

volumes:
  letsencrypt:
